name: CI/CD with Kubernetes

on:
  push:
    branches: ["main"]
  workflow_dispatch: {} # הפעלה ידנית מה-Actions

env:
  IMAGE_REPO: yogevfarjoun/winning-award-website
  IMAGE_TAG: latest
  CHART_DIR: my-react-app-chart
  RELEASE_NAME: my-react-app
  K8S_NAMESPACE: demo-app

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Docker login (Hub)
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Build image
        run: docker build -t $IMAGE_REPO:$IMAGE_TAG .

      - name: Push image
        run: docker push $IMAGE_REPO:$IMAGE_TAG

  deploy:
    name: Deploy to Minikube via Helm
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout (for chart files)
        uses: actions/checkout@v4

      - name: Cluster info (debug)
        run: |
          kubectl config current-context
          kubectl get nodes
          kubectl get ns

      - name: Helm upgrade/install
        working-directory: ./${{ env.CHART_DIR }}
        run: |
          helm upgrade --install $RELEASE_NAME . \
            --namespace $K8S_NAMESPACE \
            --create-namespace \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG

      - name: Wait for rollout
        run: |
          kubectl rollout status deploy/${{ env.RELEASE_NAME }}-deployment -n $K8S_NAMESPACE
